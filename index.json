[{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ","permalink":"https://github.com/pages/amuraru/hugo-spectrum/faq/faq1/","tags":["docs","howto"],"title":"FAQ Page 1"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ Section 1","permalink":"https://github.com/pages/amuraru/hugo-spectrum/faq/section1/faq1-1/","tags":["faq"],"title":"FAQ Page 1.1"},{"categories":null,"contents":"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}  Variables Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;  Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }}  Functions Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}  Logic Go templates provide the most basic iteration and conditional logic.\nIteration Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\n false 0 any array, slice, map, or string of length zero  Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}  Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}  Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}  Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }}  Pipes One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}  is the same as\n{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}  Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }}  Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n {{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026#34;Permalinks\u0026#34; date: \u0026#34;2013-11-18\u0026#34; aliases: - \u0026#34;/doc/permalinks/\u0026#34; groups: [\u0026#34;extras\u0026#34;] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template:\n {{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }}  Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams:CopyrightHTML:\u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34;TwitterUser:\u0026#34;spf13\u0026#34;SidebarRecentLimit:5Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026#34;twitter\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://twitter.com/{{.}}\u0026#34; rel=\u0026#34;author\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/images/twitter.png\u0026#34; width=\u0026#34;48\u0026#34; height=\u0026#34;48\u0026#34; title=\u0026#34;Twitter: {{.}}\u0026#34; alt=\u0026#34;Twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026#34;recent\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; ","parent":"User Guide","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/user-guide/hugo/","tags":["docs","user-guide","hugo","howto"],"title":"Hugo Intro"},{"categories":null,"contents":"Heading 1 Text Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla id ipsum sed enim euismod lobortis. Pellentesque facilisis efficitur eros vel feugiat. Donec vitae placerat neque, et venenatis felis. Mauris ultrices rhoncus ante non molestie. Donec fringilla gravida interdum. Pellentesque iaculis dolor a nisl iaculis, nec elementum sem efficitur. Nulla sed ante ac dolor egestas semper. Aliquam eget ligula et neque tristique blandit. Suspendisse sit amet eleifend felis.\nInteger placerat libero sit amet lorem egestas pulvinar. Proin maximus vestibulum ante, eget faucibus libero blandit ac. Maecenas imperdiet, turpis id euismod tempus, lectus purus consequat elit, ac dictum magna justo ullamcorper turpis. Ut dictum laoreet nibh, et malesuada tellus malesuada nec. Suspendisse nibh nisi, aliquet vel diam pretium, feugiat hendrerit risus. Proin sed sagittis nulla, vel feugiat dui. Cras mollis in sapien cursus egestas. Nullam vulputate ut arcu eget bibendum. Aliquam ligula mauris, placerat non mollis et, fringilla ac magna. Donec non est pellentesque, pellentesque dolor quis, tempor ipsum.\nAlert Note This is an alert box using Adobe Spectrum style.  Table Col1 Col2 Col3   8 10 50  8 10 500  8 10 50  8 10 500  8 10 50  8 10 500    Code package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; \u0026#34;time\u0026#34; ) type Moo struct { Cow int Sound string Tube chan bool } // A cow will moo until it is being milked func cow(num int, mootube chan Moo) { tube := make(chan bool) for { select { case mootube \u0026lt;- Moo{num, \u0026#34;moo\u0026#34;, tube}: fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;mooed through the mootube\u0026#34;) \u0026lt;-tube fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;is being milked and stops mooing\u0026#34;) mootube \u0026lt;- Moo{num, \u0026#34;mooh\u0026#34;, nil} fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;moos one last time in relief\u0026#34;) return default: fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;mooed through the mootube and was ignored\u0026#34;) time.Sleep(time.Duration(rand.Int31n(1000)) * time.Millisecond) } } } // The farmer wants to turn on all the milktubes to stop the mooing func farmer(numcows int, mootube chan Moo, farmertube chan string) { fmt.Println(\u0026#34;Farmer starts listening to the mootube\u0026#34;) for unrelievedCows := numcows; unrelievedCows \u0026gt; 0; { moo := \u0026lt;-mootube if moo.Sound == \u0026#34;mooh\u0026#34; { fmt.Println(\u0026#34;Farmer heard a moo of relief from cow number\u0026#34;, moo.Cow) unrelievedCows-- } else { fmt.Println(\u0026#34;Farmer heard a\u0026#34;, moo.Sound, \u0026#34;from cow number\u0026#34;, moo.Cow) time.Sleep(2e9) fmt.Println(\u0026#34;Farmer starts the milking machine on cow number\u0026#34;, moo.Cow) moo.Tube \u0026lt;- true } } fmt.Println(\u0026#34;Farmer doesn\u0026#39;t hear a single moo anymore. All done!\u0026#34;) farmertube \u0026lt;- \u0026#34;yey!\u0026#34; } // The farm starts out with mooing cows that wants to be milked func runFarm(numcows int) { farmertube := make(chan string) mootube := make(chan Moo) for cownum := 0; cownum \u0026lt; numcows; cownum++ { go cow(cownum, mootube) } go farmer(numcows, mootube, farmertube) farmerSaid := \u0026lt;-farmertube if farmerSaid == \u0026#34;yey!\u0026#34; { fmt.Println(\u0026#34;All cows are happy.\u0026#34;) } } func main() { runFarm(4) fmt.Println(\u0026#34;done\u0026#34;) } Heading 2 Heading 3 ","parent":"Developer Guide","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/developer-guide/page1/","tags":["docs","howto","page1"],"title":"Sample Page"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"Developer Guide","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/developer-guide/page2/","tags":["docs","howto","page2"],"title":"Developer Guide Page 2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ Section 1","permalink":"https://github.com/pages/amuraru/hugo-spectrum/faq/section1/faq1-2/","tags":["faq"],"title":"FAQ Page 1.2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ","permalink":"https://github.com/pages/amuraru/hugo-spectrum/faq/faq2/","tags":["docs","howto"],"title":"FAQ Page 2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"User Guide","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/user-guide/sample/","tags":["docs","howto"],"title":"Sample Page"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"Architecture","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/architecture/demo/","tags":["docs","howto"],"title":"Arch Page 1"},{"categories":null,"contents":"JSON, XML  JSONXML { \u0026#34;name\u0026#34;: \u0026#34;Alex\u0026#34;, items: 23}  \u0026lt;node\u0026gt; \u0026lt;name\u0026gt;Alex\u0026lt;/name\u0026gt; \u0026lt;items\u0026gt;3\u0026lt;/items\u0026gt; \u0026lt;/node\u0026gt;    YAML, Toml  YamlToml build:useResourceCacheWhen:fallback [build] useResourceCacheWhen = \u0026#34;fallback\u0026#34;    ","parent":"Highlighting","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/highlighting/json-yaml/","tags":["highlight"],"title":"Data structures"},{"categories":null,"contents":"Link Example displayed using Swagger UI. Data file is load from data/apis folder   .information-container, .scheme-container { display: none !important; }   window.onload = function() { const ui = SwaggerUIBundle({ spec: {\"components\":{\"links\":{\"PullRequestMerge\":{\"operationId\":\"mergePullRequest\",\"parameters\":{\"pid\":\"$response.body#/id\",\"slug\":\"$response.body#/repository/slug\",\"username\":\"$response.body#/author/username\"}},\"RepositoryPullRequests\":{\"operationId\":\"getPullRequestsByRepository\",\"parameters\":{\"slug\":\"$response.body#/slug\",\"username\":\"$response.body#/owner/username\"}},\"UserRepositories\":{\"operationId\":\"getRepositoriesByOwner\",\"parameters\":{\"username\":\"$response.body#/username\"}},\"UserRepository\":{\"operationId\":\"getRepository\",\"parameters\":{\"slug\":\"$response.body#/slug\",\"username\":\"$response.body#/owner/username\"}}},\"schemas\":{\"pullrequest\":{\"properties\":{\"author\":{\"$ref\":\"#/components/schemas/user\"},\"id\":{\"type\":\"integer\"},\"repository\":{\"$ref\":\"#/components/schemas/repository\"},\"title\":{\"type\":\"string\"}},\"type\":\"object\"},\"repository\":{\"properties\":{\"owner\":{\"$ref\":\"#/components/schemas/user\"},\"slug\":{\"type\":\"string\"}},\"type\":\"object\"},\"user\":{\"properties\":{\"username\":{\"type\":\"string\"},\"uuid\":{\"type\":\"string\"}},\"type\":\"object\"}}},\"info\":{\"title\":\"Link Example\",\"version\":\"1.0.0\"},\"openapi\":\"3.0.0\",\"paths\":{\"/2.0/repositories/{username}\":{\"get\":{\"operationId\":\"getRepositoriesByOwner\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"items\":{\"$ref\":\"#/components/schemas/repository\"},\"type\":\"array\"}}},\"description\":\"repositories owned by the supplied user\",\"links\":{\"userRepository\":{\"$ref\":\"#/components/links/UserRepository\"}}}}}},\"/2.0/repositories/{username}/{slug}\":{\"get\":{\"operationId\":\"getRepository\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"slug\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/repository\"}}},\"description\":\"The repository\",\"links\":{\"repositoryPullRequests\":{\"$ref\":\"#/components/links/RepositoryPullRequests\"}}}}}},\"/2.0/repositories/{username}/{slug}/pullrequests\":{\"get\":{\"operationId\":\"getPullRequestsByRepository\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"slug\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"query\",\"name\":\"state\",\"schema\":{\"enum\":[\"open\",\"merged\",\"declined\"],\"type\":\"string\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"items\":{\"$ref\":\"#/components/schemas/pullrequest\"},\"type\":\"array\"}}},\"description\":\"an array of pull request objects\"}}}},\"/2.0/repositories/{username}/{slug}/pullrequests/{pid}\":{\"get\":{\"operationId\":\"getPullRequestsById\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"slug\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"pid\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/pullrequest\"}}},\"description\":\"a pull request object\",\"links\":{\"pullRequestMerge\":{\"$ref\":\"#/components/links/PullRequestMerge\"}}}}}},\"/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge\":{\"post\":{\"operationId\":\"mergePullRequest\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"slug\",\"required\":true,\"schema\":{\"type\":\"string\"}},{\"in\":\"path\",\"name\":\"pid\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"responses\":{\"204\":{\"description\":\"the PR was successfully merged\"}}}},\"/2.0/users/{username}\":{\"get\":{\"operationId\":\"getUserByName\",\"parameters\":[{\"in\":\"path\",\"name\":\"username\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/user\"}}},\"description\":\"The User\",\"links\":{\"userRepositories\":{\"$ref\":\"#/components/links/UserRepositories\"}}}}}}}}, dom_id: '#swagger-ui', deepLinking: true, validatorUrl: null, displayOperationId: true, showCommonExtensions: true, supportedSubmitMethods: [], presets: [ SwaggerUIBundle.presets.apis ], plugins: [ ], layout: \"BaseLayout\" }); window.ui = ui }  ","parent":"Open API","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/openapi/link/","tags":["openapi"],"title":"Link Example"},{"categories":null,"contents":"Lines with decorations   var generatedDiagram = markdeep.formatDiagram(\"\\n ________ o * * .--------------. \\n *---\\x2b---. | | o o | ^ \\\\ \\/ | .----------. | \\n | | \\x27--* -\\x2b- | | v \\/ \\\\ \\/ | | \\x3c------. | | \\n | \\x27-----\\x3e .---(---\\x27 ---\\x3e*\\x3c--- \\/ .\\x2b-\\x3e*\\x3c--o----\\x27 | | | | | \\n \\x3c--\\x27 ^ ^ | | | | | ^ \\\\ | \\x27--------\\x27 | | \\n \\\\\\/ *-----\\x27 o |\\x3c-----\\x3e| \\x27-----\\x27 |__| v \\x27------------\\x27 | \\n \\/\\\\ *---------------\\x27 \\n ◌------○ ◍------● \\n\"); $(\"#fc894eff865b5a855f72aed4c76695f9a7617bdb\").html(generatedDiagram);  Overlaps and Intersections   var generatedDiagram = markdeep.formatDiagram(\"\\n \\n .-. .-. .-. .-. .-. .-. \\n | | | | | | | | | | | | \\n .---------. .--\\x2b---\\x2b--. .--\\x2b---\\x2b--. .--| |--. .--\\x2b \\x2b--. .------|--. \\n | | | | | | | | | | | | | | | | | | \\n \\x27---------\\x27 \\x27--\\x2b---\\x2b--\\x27 \\x27--\\x2b---\\x2b--\\x27 \\x27--| |--\\x27 \\x27--\\x2b \\x2b--\\x27 \\x27--|------\\x27 \\n | | | | | | | | | | | | \\n \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\n\"); $(\"#58e3c8861401d2c2e6451cc099b19aea7686d7bd\").html(generatedDiagram);  Flow chart   var generatedDiagram = markdeep.formatDiagram(\"\\n\\n . \\n .---------. \\/ \\\\ \\n | START | \\/ \\\\ .-\\x2b-------\\x2b-. ___________ \\n \\x27----\\x2b----\\x27 .-------. A \\/ \\\\ B | |COMPLEX| | \\/ \\\\ .-. \\n | | END |\\x3c-----\\x2bCHOICE \\x2b-----\\x3e| | | \\x2b---\\x3e\\x2b PREPARATION \\x2b---\\x3e| X | \\n v \\x27-------\\x27 \\\\ \\/ | |PROCESS| | \\\\___________\\/ \\x27-\\x27 \\n .---------. \\\\ \\/ \\x27-\\x2b---\\x2b---\\x2b-\\x27 \\n \\/ INPUT \\/ \\\\ \\/ \\n \\x27-----\\x2b---\\x27 \\x27 \\n | ^ \\n v | \\n .-----------. .-----\\x2b-----. .-. \\n | PROCESS \\x2b----------------\\x3e| PROCESS |\\x3c------\\x2b X | \\n \\x27-----------\\x27 \\x27-----------\\x27 \\x27-\\x27 \\n \\n\"); $(\"#e0bb8a7da1e8d64e079d8d0553011dd83aee09c5\").html(generatedDiagram);  Simple plot diagram   var generatedDiagram = markdeep.formatDiagram(\"\\n\\n ▲\\n Uin ┊ .------------------------\\n ┊ | \\n ┊ | \\n *---\\x27┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄▶\\n \\n Udc▲ \\n Udc_OK ┊ .---------------------\\n ┊ \\/ : \\n ┊ \\/ : \\n *---\\x27┄┄┄┄:┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄▶\\n :\\x3c-----\\x3e: \\n ▲ 500ms : \\n ┊ : \\nCpu.Qon ┊┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄.-----------\\n ┊ | Inactive \\n ┊ Active | \\n *----------------\\x27┄┄┄┄┄┄┄┄┄┄┄▶\\n \\n\\n\"); $(\"#daf981902934729c08abe96507f75d54d8c4d15f\").html(generatedDiagram);  Line ends   var generatedDiagram = markdeep.formatDiagram(\"\\n \\n o--o *--o \\/ \\/ * o o o o o * * * * o o o o * * * * o o o o * * * * \\n o--* *--* v v ^ ^ | | | | | | | | \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\n o--\\x3e *--\\x3e * o \\/ \\/ o * v \\x27 o * v \\x27 o * v \\\\ o * v \\\\ o * v \\/ o * v \\/ \\n o--- *--- \\n ^ ^ ^ ^ . . . . ^ ^ ^ ^ \\\\ \\\\ \\\\ \\\\ ^ ^ ^ ^ \\/ \\/ \\/ \\/ \\n | | * o \\\\ \\\\ * o | | | | | | | | \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\n v v ^ ^ v v ^ ^ o * v \\x27 o * v \\x27 o * v \\\\ o * v \\\\ o * v \\/ o * v \\/ \\n * o | | * o \\\\ \\\\ \\n \\n \\x3c--o \\x3c--* \\x3c--\\x3e \\x3c--- ---o ---* ---\\x3e ---- *\\x3c-- o\\x3c-- --\\x3eo --\\x3e* \\n \\n\"); $(\"#7ae3fa0cd57cb69c2097935639d6f6d8b8c86421\").html(generatedDiagram);  Small Grids   var generatedDiagram = markdeep.formatDiagram(\"\\n ___ ___ .---\\x2b---\\x2b---\\x2b---\\x2b---. .---\\x2b---\\x2b---\\x2b---. .---. .---. \\n ___\\/ \\\\___\\/ \\\\ | | | | | | \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ | \\x2b---\\x2b | \\n \\/ \\\\___\\/ \\\\___\\/ \\x2b---\\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b \\x2b---\\x2b \\n \\\\___\\/ b \\\\___\\/ \\\\ | | | b | | | \\\\ \\/ \\\\a\\/ \\\\b\\/ \\\\ \\/ \\\\ | \\x2b---\\x2b | \\n \\/ a \\\\___\\/ \\\\___\\/ \\x2b---\\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b b \\x2b---\\x2b \\n \\\\___\\/ \\\\___\\/ \\\\ | | a | | | | \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ | a \\x2b---\\x2b | \\n \\\\___\\/ \\\\___\\/ \\x27---\\x2b---\\x2b---\\x2b---\\x2b---\\x27 \\x27---\\x2b---\\x2b---\\x2b---\\x27 \\x27---\\x27 \\x27---\\x27 \\n \\n\"); $(\"#23e17d4905629ea89819a1077a1eb45561c49244\").html(generatedDiagram);  Graphics Diagram   var generatedDiagram = markdeep.formatDiagram(\"\\n . \\n 0 3 P * Eye \\/ ^ \\/ \\n *-------* \\x2by \\\\ \\x2b) \\\\ \\/ Reflection \\n 1 \\/| 2 \\/| ^ \\\\ \\\\ \\\\ v \\n *-------* | | v0 \\\\ v3 --------*-------- \\n | |4 | |7 | ◄╮ *----\\\\-----* \\n | *-----|-* ⤹ \\x2b-----\\x3e \\x2bx \\/ v X \\\\ .-.\\x3c-------- o \\n |\\/ |\\/ \\/ ⤴ \\/ o \\\\ | \\/ | Refraction \\/ \\\\ \\n *-------* v \\/ \\\\ \\x2b-\\x27 \\/ \\\\ \\n 5 6 \\x2bz v1 *------------------* v2 | o-----o \\n v \\n\\n\"); $(\"#6f4f8da5404c08bb6cda32fbc301316914bd3c85\").html(generatedDiagram);  ","parent":"Diagrams","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/diagrams/markdeep/","tags":["diagram","markdeep"],"title":"Markdeep examples"},{"categories":null,"contents":"Graph graph TD; A--\u0026gt;B; A--\u0026gt;C; A--\u0026gt;D;  graph TD; A--B; A--C; A--D;  graph LR A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two]  graph LR A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Sequence diagram sequenceDiagram autonumber Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  sequenceDiagram autonumber Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts! John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  Class diagram classDiagram Customer \u0026#34;1\u0026#34; --\u0026gt; \u0026#34;*\u0026#34; Ticket Student \u0026#34;1\u0026#34; --\u0026gt; \u0026#34;1..*\u0026#34; Course Galaxy --\u0026gt; \u0026#34;many\u0026#34; Star : Contains  classDiagram Customer \"1\" -- \"*\" Ticket Student \"1\" -- \"1..*\" Course Galaxy -- \"many\" Star : Contains  State diagram stateDiagram [*] --\u0026gt; Active state Active { [*] --\u0026gt; NumLockOff NumLockOff --\u0026gt; NumLockOn : EvNumLockPressed NumLockOn --\u0026gt; NumLockOff : EvNumLockPressed -- [*] --\u0026gt; CapsLockOff CapsLockOff --\u0026gt; CapsLockOn : EvCapsLockPressed CapsLockOn --\u0026gt; CapsLockOff : EvCapsLockPressed -- [*] --\u0026gt; ScrollLockOff ScrollLockOff --\u0026gt; ScrollLockOn : EvCapsLockPressed ScrollLockOn --\u0026gt; ScrollLockOff : EvCapsLockPressed }  stateDiagram [*] -- Active state Active { [*] -- NumLockOff NumLockOff -- NumLockOn : EvNumLockPressed NumLockOn -- NumLockOff : EvNumLockPressed -- [*] -- CapsLockOff CapsLockOff -- CapsLockOn : EvCapsLockPressed CapsLockOn -- CapsLockOff : EvCapsLockPressed -- [*] -- ScrollLockOff ScrollLockOff -- ScrollLockOn : EvCapsLockPressed ScrollLockOn -- ScrollLockOff : EvCapsLockPressed }  Gantt diagram gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h  gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h  Pie diagram pie title Key elements in Product X \u0026#34;Calcium\u0026#34; : 42.96 \u0026#34;Potassium\u0026#34; : 50.05 \u0026#34;Magnesium\u0026#34; : 10.01 \u0026#34;Iron\u0026#34; : 5  pie title Key elements in Product X \"Calcium\" : 42.96 \"Potassium\" : 50.05 \"Magnesium\" : 10.01 \"Iron\" : 5  ","parent":"Diagrams","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/diagrams/mermaid/","tags":["diagram","mermaid"],"title":"Mermaid examples"},{"categories":null,"contents":"Petstore API displayed using Swagger UI\n .information-container, .scheme-container { display: none !important; }   window.onload = function() { const ui = SwaggerUIBundle({ spec: {\"components\":{\"schemas\":{\"Error\":{\"properties\":{\"code\":{\"format\":\"int32\",\"type\":\"integer\"},\"message\":{\"type\":\"string\"}},\"required\":[\"code\",\"message\"],\"type\":\"object\"},\"NewPet\":{\"properties\":{\"name\":{\"type\":\"string\"},\"tag\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"Pet\":{\"allOf\":[{\"$ref\":\"#/components/schemas/NewPet\"},{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"}},\"required\":[\"id\"],\"type\":\"object\"}]}}},\"info\":{\"contact\":{\"email\":\"apiteam@swagger.io\",\"name\":\"Swagger API Team\",\"url\":\"http://swagger.io\"},\"description\":\"A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\",\"license\":{\"name\":\"Apache 2.0\",\"url\":\"https://www.apache.org/licenses/LICENSE-2.0.html\"},\"termsOfService\":\"http://swagger.io/terms/\",\"title\":\"Swagger Petstore\",\"version\":\"1.0.0\"},\"openapi\":\"3.0.0\",\"paths\":{\"/pets\":{\"get\":{\"description\":\"Returns all pets from the system that the user has access to\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\n\",\"operationId\":\"findPets\",\"parameters\":[{\"description\":\"tags to filter by\",\"in\":\"query\",\"name\":\"tags\",\"required\":false,\"schema\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"style\":\"form\"},{\"description\":\"maximum number of results to return\",\"in\":\"query\",\"name\":\"limit\",\"required\":false,\"schema\":{\"format\":\"int32\",\"type\":\"integer\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"items\":{\"$ref\":\"#/components/schemas/Pet\"},\"type\":\"array\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}},\"post\":{\"description\":\"Creates a new pet in the store. Duplicates are allowed\",\"operationId\":\"addPet\",\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/NewPet\"}}},\"description\":\"Pet to add to the store\",\"required\":true},\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Pet\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}}},\"/pets/{id}\":{\"delete\":{\"description\":\"deletes a single pet based on the ID supplied\",\"operationId\":\"deletePet\",\"parameters\":[{\"description\":\"ID of pet to delete\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"schema\":{\"format\":\"int64\",\"type\":\"integer\"}}],\"responses\":{\"204\":{\"description\":\"pet deleted\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}},\"get\":{\"description\":\"Returns a user based on a single ID, if the user does not have access to the pet\",\"operationId\":\"find pet by id\",\"parameters\":[{\"description\":\"ID of pet to fetch\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"schema\":{\"format\":\"int64\",\"type\":\"integer\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Pet\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}}}},\"servers\":[{\"url\":\"http://petstore.swagger.io/api\"}]}, dom_id: '#swagger-ui', deepLinking: true, validatorUrl: null, displayOperationId: true, showCommonExtensions: true, supportedSubmitMethods: [], presets: [ SwaggerUIBundle.presets.apis ], plugins: [ ], layout: \"BaseLayout\" }); window.ui = ui }  ","parent":"Open API","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/openapi/petstore/","tags":["openapi"],"title":"Petstore APIs"},{"categories":null,"contents":"Kotlin, Java  Kotlin exampleJava example fun main() { println(\u0026#34;Hello world!\u0026#34;) }  public static void main(String[] args) { System.out.println(\u0026#34;Hello world\u0026#34;); }    Go, Python  Go examplePython example func main() { fmt.Println(\u0026#34;hello world\u0026#34;) }  print(\u0026#39;Hello, world!\u0026#39;)    C, C#, C++  CC#C\u0026#43;\u0026#43; #include \u0026lt;stdio.h\u0026gt;int main() { printf(\u0026#34;Hello World\u0026#34;); return 0; }  static void Main(string[] args) { Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); }  int main() { std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34; \u0026lt;\u0026lt; std::endl; return 0; }    ","parent":"Highlighting","permalink":"https://github.com/pages/amuraru/hugo-spectrum/docs/highlighting/programming/","tags":["highlight"],"title":"Programming"},{"categories":null,"contents":"","parent":"Adobe Coral Spectrum","permalink":"https://github.com/pages/amuraru/hugo-spectrum/search/","tags":null,"title":"Search Results"}]